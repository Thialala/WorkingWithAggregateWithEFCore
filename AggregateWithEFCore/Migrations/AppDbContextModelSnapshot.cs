// <auto-generated />
using System;
using AggregateWithEFCore.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AggregateWithEFCore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9");

            modelBuilder.Entity("AggregateWithEFCore.DomainModel.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("RoleName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserAggregateRootId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserAggregateRootId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("AggregateWithEFCore.DomainModel.UserAggregateRoot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AggregateWithEFCore.DomainModel.Role", b =>
                {
                    b.HasOne("AggregateWithEFCore.DomainModel.UserAggregateRoot", null)
                        .WithMany("Roles")
                        .HasForeignKey("UserAggregateRootId");
                });

            modelBuilder.Entity("AggregateWithEFCore.DomainModel.UserAggregateRoot", b =>
                {
                    b.OwnsOne("AggregateWithEFCore.DomainModel.Address", "Address", b1 =>
                        {
                            b1.Property<int>("UserAggregateRootId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("AddressLine")
                                .HasColumnType("TEXT");

                            b1.HasKey("UserAggregateRootId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserAggregateRootId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
